version: "3.8"
services:
  front:
    init: true
    container_name: ELS_Front
    build:
      context: ./front
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    env_file:
      - ./front/.env
    volumes:
      - ./front/src:/app/src
      - ./front/public:/app/public
      - ./front/node_modules:/app/node_modules
    restart: always
    tty: true
    stdin_open: true
    # depends_on:
    #   back:
    #     condition: service_started
    networks:
      - frontend
      
  # back:
  #   init: true
  #   container_name: ELS_Back
  #   build: 
  #     context: ./back
  #     dockerfile: Dockerfile
  #   ports:
  #    - 8080:8080
  #   tty: tty
  #   restart: always
  #   volumes:
  #     - type: bind
  #       source: ./back
  #       target: /go/src
  #   env_file:
  #     - ./db/.env_sql
  #   depends_on:
  #     db:
  #       condition: service_started
  #   networks:
  #     - frontend
  #     - backend

  # db:
  #   init: true
  #   container_name: ELS_DB
  #   build:
  #     context: ./db
  #     dockerfile: Dockerfile
  #   tty: true
  #   # platform: linux/x86_64
  #   ports:
  #     - 3306:3306
  #   env_file:
  #     - ./db/.env_sql
  #   volumes:
  #     - type: volume
  #       source: ELS_volume
  #       target: /var/lib/mysql
  #     # - type: bind
  #     #   source: ./db/init
  #     #   target: /docker-entrypoint-initdb.d
  #   networks:
  #     - backend

volumes:
  ELS_volume:
    name: ELS_volume

networks:
  frontend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.19.0.0/16
  backend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16